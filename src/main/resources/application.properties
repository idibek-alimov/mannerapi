spring.port=8080
spring.datasource.initialization-mode=update
spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://${PROD_DB_HOST}:${PROD_DB_PORT}/${PROD_DB_NAME}
#spring.datasource.username=${PROD_DB_USERNAME}
#spring.datasource.password=${PROD_DB_PASSWORD}
spring.datasource.url=jdbc:postgresql://localhost:5432/jonibekdb
spring.datasource.username=jonibek
spring.datasource.password=jonik1997
spring.datasource.initialize=always
spring.jpa.properties.javax.persistence.create-database-schemas = true
spring.batch.initialize-schema=always
spring.jpa.hibernate.ddl-auto=update
spring.resources.static-locations=file:uploads/
spring.sql.init.mode:embedded
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jackson.serialization.fail-on-empty-beans=false
servlet.multipart.max-file-size=200MB
servlet.multipart.max-request-size=200MB

####################################################
#################S3S3S3#############################
####################################################
cloud.aws.credentials.access-key=bz58990
cloud.aws.credentials.secret-key=05bb3458661150a7292d36a240cca2fd
cloud.aws.region.static=ru-1
cloud.aws.stack.auto=false
application.bucket.name=13571a35-manner-api-bucket
application.bucket.url=https://s3.timeweb.com

#management.endpoints.web.exposure.include=health, info, metrics, prometheus
#management.metrics.distribution.percentiles-histogram.http.server.requests=true
#
#management.observations.key-values.application=mannerapi
#management.tracing.sampling.probability=1.0
#logging.pattern.correlation=[${spring.application.name:},%X{traceId:-},%X{spanId:-}]
#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
#spring.jpa.open-in-view=false
#spring.application.name=mannerapi

